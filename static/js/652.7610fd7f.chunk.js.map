{"version":3,"file":"static/js/652.7610fd7f.chunk.js","mappings":"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","sources":["API/feth.js","components/MoviesCard/MoviesCard.styled.jsx","components/MoviesCard/MoviesCard.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass FetchData {\n  constructor() {\n    this.KEY = 'b3b4716df5187d0bc9138efc2668bc10';\n    this.BASE_URL = 'https://api.themoviedb.org/3';\n    this.popularMovies = '/trending/movie/week';\n    this.searchMovies = '/search/movie';\n    this.detailsMovies = '/movie/';\n    this.creditsMovies = '/movies/get-movie-credits';\n    this.reviewsMovies = '/movies/get-movie-reviews';\n  }\n\n  async getPopular() {\n    const options = { params: { api_key: this.KEY } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.popularMovies}`,\n      options\n    );\n    return response.data.results;\n  }\n\n  async getDetails(movie_id) {\n    const options = { params: { api_key: this.KEY } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.detailsMovies}${movie_id}`,\n      options\n    );\n\n    return response.data;\n  }\n\n  async getCast(movie_id) {\n    const options = { params: { api_key: this.KEY } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.detailsMovies}${movie_id}/credits`,\n      options\n    );\n    return response.data;\n  }\n  async getReviews(movie_id) {\n    const options = { params: { api_key: this.KEY } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.detailsMovies}${movie_id}/reviews`,\n      options\n    );\n\n    return response.data;\n  }\n\n  async getSearch(query) {\n    const options = { params: { api_key: this.KEY, query } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.searchMovies}`,\n      options\n    );\n    return response.data;\n  }\n}\n\nexport default FetchData;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const Card = styled.li`\n  background-color: #f4a259;\n  border-radius: 5px;\n  width: 300px;\n  overflow: hidden;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  color: #363030;\n  height: 50px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  margin: 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Release = styled.span`\n  color: #363030;\n  text-decoration: none;\n`;\n","import PropTypes from 'prop-types';\nimport { Card, Title, StyledLink, Release } from './MoviesCard.styled';\nimport { useLocation } from 'react-router-dom';\nexport const MoviesCard = ({ title, poster_path, release_date, id }) => {\n  const location = useLocation();\n  return (\n    <Card>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <img src={poster_path} alt={title} /> <Title>{title}</Title>\n        <Release>{release_date}</Release>\n      </StyledLink>\n    </Card>\n  );\n};\n\nMoviesCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: center;\n  justify-content: center;\n  list-style: none;\n  gap: 24px;\n`;\n","import React from 'react';\nimport { Ul } from './MoviesList.styled';\nexport const MoviesList = ({ children }) => {\n  return <Ul>{children}</Ul>;\n};\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport const Wrap = styled.div`\n  display: inline-flex;\n  margin-top: 24px;\n  margin-left: 50%;\n  transform: translateX(-50%);\n  padding: 16px;\n\n  gap: 16px;\n  background-color: #f4a259;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Input = styled(TextField)`\n  & label.Mui-focused {\n    color: #363030;\n  }\n  & .MuiInput-underline:after {\n    border-bottom-color: #363030;\n  }\n  & .MuiOutlinedInput-root {\n    & fieldset,\n    &:hover fieldset,\n    &.Mui-focused fieldset {\n      border-color: #363030;\n    }\n  }\n`;\n\nexport const Submit = styled(Button)`\n  color: #fff;\n  background-color: #363030;\n  :hover {\n    background-color: #534646;\n  }\n`;\n","import { useState } from 'react';\nimport { Wrap, Input, Submit } from './Search.styled';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nexport const Search = ({ handleSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmit = () => {\n    if (query !== '') {\n      handleSubmit(query);\n      setQuery('');\n      return;\n    }\n    toast.error('Fill in the fields!', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  };\n  return (\n    <Wrap>\n      <Input\n        id=\"outlined-basic\"\n        label=\"Search\"\n        variant=\"outlined\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <Submit variant=\"contained\" onClick={onSubmit}>\n        Submit\n      </Submit>\n    </Wrap>\n  );\n};\n\nSearch.propTypes = { handleSubmit: PropTypes.func.isRequired };\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Search } from 'components/Search/Search';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { MoviesCard } from 'components/MoviesCard/MoviesCard';\nimport { Loading } from 'components/Loading/Loading';\nimport { toast } from 'react-toastify';\nimport data from 'API/feth';\nconst fetchData = new data();\nconst Movies = () => {\n  const [error, setError] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query');\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const getMoviesSearch = async () => {\n      setStatus('pending');\n      try {\n        const res = await fetchData.getSearch(query);\n        setMovies(res);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    };\n    getMoviesSearch();\n  }, [query]);\n\n  if (status === 'rejected') {\n    toast.error(error, {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  return (\n    <>\n      <Search handleSubmit={handleSubmit} />\n      {status === 'pending' && <Loading />}\n      {status === 'resolved' && (\n        <MoviesList>\n          {movies.results?.[0] &&\n            movies.results.map(({ id, title, poster_path, release_date }) => (\n              <MoviesCard\n                key={id}\n                title={title}\n                id={id}\n                poster_path={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}?api_key=b3b4716df5187d0bc9138efc2668bc10`\n                    : 'https://gdr.one/simg/300x450/363030/f4a259?text=Not%20found'\n                }\n                release_date={release_date}\n              />\n            ))}\n        </MoviesList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["FetchData","this","KEY","BASE_URL","popularMovies","searchMovies","detailsMovies","creditsMovies","reviewsMovies","options","params","api_key","axios","response","data","results","movie_id","query","Card","styled","Title","StyledLink","Link","Release","MoviesCard","title","poster_path","release_date","id","location","useLocation","to","state","from","src","alt","Ul","MoviesList","children","Wrap","Input","TextField","Submit","Button","Search","handleSubmit","useState","setQuery","label","variant","value","onChange","e","target","onClick","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","fetchData","error","setError","status","setStatus","useSearchParams","searchParams","setSearchParams","movies","setMovies","get","useEffect","getMoviesSearch","getSearch","res","message","Loading","map"],"sourceRoot":""}