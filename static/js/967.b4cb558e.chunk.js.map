{"version":3,"file":"static/js/967.b4cb558e.chunk.js","mappings":"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","sources":["API/feth.js","components/Details/Details.styled.jsx","components/Details/Details.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nclass FetchData {\n  constructor() {\n    this.KEY = 'b3b4716df5187d0bc9138efc2668bc10';\n    this.BASE_URL = 'https://api.themoviedb.org/3';\n    this.popularMovies = '/trending/movie/week';\n    this.searchMovies = '/search/movie';\n    this.detailsMovies = '/movie/';\n    this.creditsMovies = '/movies/get-movie-credits';\n    this.reviewsMovies = '/movies/get-movie-reviews';\n  }\n\n  async getPopular() {\n    const options = { params: { api_key: this.KEY } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.popularMovies}`,\n      options\n    );\n    return response.data.results;\n  }\n\n  async getDetails(movie_id) {\n    const options = { params: { api_key: this.KEY } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.detailsMovies}${movie_id}`,\n      options\n    );\n\n    return response.data;\n  }\n\n  async getCast(movie_id) {\n    const options = { params: { api_key: this.KEY } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.detailsMovies}${movie_id}/credits`,\n      options\n    );\n    return response.data;\n  }\n  async getReviews(movie_id) {\n    const options = { params: { api_key: this.KEY } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.detailsMovies}${movie_id}/reviews`,\n      options\n    );\n\n    return response.data;\n  }\n\n  async getSearch(query) {\n    const options = { params: { api_key: this.KEY, query } };\n    const response = await axios.get(\n      `${this.BASE_URL}${this.searchMovies}`,\n      options\n    );\n    return response.data;\n  }\n}\n\nexport default FetchData;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  margin-top: 24px;\n  padding: 16px;\n  display: flex;\n  gap: 16px;\n  background-color: #f4a259;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  max-width: 300px;\n  height: 100%;\n  object-fit: contain;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n  justify-content: flex-start;\n  gap: 24px;\n`;\n\nexport const Item = styled.li`\n  border: 2px #363030 solid;\n  border-radius: 5px;\n  width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f4a259;\n  transition: background-color linear 250ms;\n  :hover {\n    background-color: #e4b48b;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: #363030;\n  font-size: 24px;\n  padding: 12px;\n  &.active {\n    color: #e6e6e6;\n  }\n`;\n","import { useRef } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Wrap, Ul, StyledLink, Item, Img } from './Details.styled';\n\nexport const Details = ({\n  overview,\n  original_title,\n  release_date,\n  poster_path,\n  vote_average,\n  genres,\n}) => {\n  const location = useRef(useLocation());\n  const backLinkHref = location.current.state?.from ?? '/';\n\n  return (\n    <Wrap>\n      <Link to={backLinkHref}>Back</Link>\n      <Img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300/${poster_path}?api_key=b3b4716df5187d0bc9138efc2668bc10`\n            : `https://gdr.one/simg/200x300/363030/fff?text=Not%20found`\n        }\n        alt={original_title}\n      />\n      <div>\n        <h1>{`${original_title} (${String(release_date).slice(0, 4)})`}</h1>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n\n        {genres?.[0] && (\n          <>\n            <h2>Genres</h2>\n            <p>\n              {genres.map(({ name }) => (\n                <span key={name}>{name} </span>\n              ))}\n            </p>\n          </>\n        )}\n\n        <h3>Additional information</h3>\n        <Ul>\n          <Item>\n            <StyledLink to=\"cast\">cast</StyledLink>\n          </Item>\n          <Item>\n            <StyledLink to=\"reviews\">reviews</StyledLink>\n          </Item>\n        </Ul>\n      </div>\n    </Wrap>\n  );\n};\nDetails.propTypes = {\n  overview: PropTypes.string.isRequired,\n  original_title: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  vote_average: PropTypes.number.isRequired,\n  genres: PropTypes.array,\n};\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { Details } from 'components/Details/Details';\nimport { toast } from 'react-toastify';\nimport data from 'API/feth';\nimport { Loading } from 'components/Loading/Loading';\nconst fetchData = new data();\n\nconst MovieDetails = () => {\n  const [error, setError] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [movies, setMovies] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMoviesDetails = async () => {\n      setStatus('pending');\n      try {\n        const res = await fetchData.getDetails(movieId);\n        setMovies(res);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    };\n\n    getMoviesDetails();\n  }, [movieId]);\n\n  const {\n    overview,\n    original_title,\n    release_date,\n    poster_path,\n    vote_average,\n    genres,\n  } = movies;\n\n  if (status === 'pending') {\n    return <Loading />;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <Details\n          overview={overview}\n          original_title={original_title}\n          release_date={release_date}\n          poster_path={poster_path}\n          vote_average={vote_average}\n          genres={genres}\n        ></Details>\n        <Suspense fallback={<Loading />}>\n          <Outlet />\n        </Suspense>\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    toast.error(error, {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n};\n\nexport default MovieDetails;\n"],"names":["FetchData","this","KEY","BASE_URL","popularMovies","searchMovies","detailsMovies","creditsMovies","reviewsMovies","options","params","api_key","axios","response","data","results","movie_id","query","Wrap","styled","Img","Ul","Item","StyledLink","NavLink","Details","overview","original_title","release_date","poster_path","vote_average","genres","backLinkHref","useRef","useLocation","current","state","from","to","src","alt","String","slice","Math","round","map","name","fetchData","useState","error","setError","status","setStatus","movies","setMovies","movieId","useParams","useEffect","getMoviesDetails","getDetails","res","message","Loading","Suspense","fallback","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}